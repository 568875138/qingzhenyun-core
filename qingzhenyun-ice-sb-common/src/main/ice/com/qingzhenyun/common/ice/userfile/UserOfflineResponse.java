// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `userfile.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.qingzhenyun.common.ice.userfile;

public class UserOfflineResponse extends com.zeroc.Ice.Value
{
    public UserOfflineResponse()
    {
        this.taskHash = "";
        this.path = "";
        this.mime = "";
        this.name = "";
        this.files = "";
        this.copied = "";
        this.uuid = "";
        this.destUuid = "";
    }

    public UserOfflineResponse(long userId, String taskHash, String path, long size, String mime, String name, String files, String copied, long createTime, String uuid, String destUuid, int progress, int status)
    {
        this.userId = userId;
        this.taskHash = taskHash;
        this.path = path;
        this.size = size;
        this.mime = mime;
        this.name = name;
        this.files = files;
        this.copied = copied;
        this.createTime = createTime;
        this.uuid = uuid;
        this.destUuid = destUuid;
        this.progress = progress;
        this.status = status;
    }

    public long userId;

    public String taskHash;

    public String path;

    public long size;

    public String mime;

    public String name;

    public String files;

    public String copied;

    public long createTime;

    public String uuid;

    public String destUuid;

    public int progress;

    public int status;

    public UserOfflineResponse clone()
    {
        return (UserOfflineResponse)super.clone();
    }

    public static String ice_staticId()
    {
        return "::userfile::UserOfflineResponse";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    public static final long serialVersionUID = -3873357766978096979L;

    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        ostr_.writeLong(userId);
        ostr_.writeString(taskHash);
        ostr_.writeString(path);
        ostr_.writeLong(size);
        ostr_.writeString(mime);
        ostr_.writeString(name);
        ostr_.writeString(files);
        ostr_.writeString(copied);
        ostr_.writeLong(createTime);
        ostr_.writeString(uuid);
        ostr_.writeString(destUuid);
        ostr_.writeInt(progress);
        ostr_.writeInt(status);
        ostr_.endSlice();
    }

    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        userId = istr_.readLong();
        taskHash = istr_.readString();
        path = istr_.readString();
        size = istr_.readLong();
        mime = istr_.readString();
        name = istr_.readString();
        files = istr_.readString();
        copied = istr_.readString();
        createTime = istr_.readLong();
        uuid = istr_.readString();
        destUuid = istr_.readString();
        progress = istr_.readInt();
        status = istr_.readInt();
        istr_.endSlice();
    }
}
